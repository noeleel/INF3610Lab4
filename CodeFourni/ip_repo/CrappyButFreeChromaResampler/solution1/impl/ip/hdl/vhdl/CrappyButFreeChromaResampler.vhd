-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CrappyButFreeChromaResampler is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    video_out_TVALID : OUT STD_LOGIC;
    video_out_TREADY : IN STD_LOGIC;
    video_out_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    video_out_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    video_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    video_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of CrappyButFreeChromaResampler is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "CrappyButFreeChromaResampler,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.223333,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=255,HLS_SYN_LUT=448}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv21_1FA400 : STD_LOGIC_VECTOR (20 downto 0) := "111111010010000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal video_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal video_in_V_data_V_0_vld_in : STD_LOGIC;
    signal video_in_V_data_V_0_vld_out : STD_LOGIC;
    signal video_in_V_data_V_0_ack_in : STD_LOGIC;
    signal video_in_V_data_V_0_ack_out : STD_LOGIC;
    signal video_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal video_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal video_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_data_V_0_sel : STD_LOGIC;
    signal video_in_V_data_V_0_load_A : STD_LOGIC;
    signal video_in_V_data_V_0_load_B : STD_LOGIC;
    signal video_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_keep_V_0_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_keep_V_0_vld_in : STD_LOGIC;
    signal video_in_V_keep_V_0_vld_out : STD_LOGIC;
    signal video_in_V_keep_V_0_ack_in : STD_LOGIC;
    signal video_in_V_keep_V_0_ack_out : STD_LOGIC;
    signal video_in_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_keep_V_0_sel : STD_LOGIC;
    signal video_in_V_keep_V_0_load_A : STD_LOGIC;
    signal video_in_V_keep_V_0_load_B : STD_LOGIC;
    signal video_in_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_strb_V_0_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_strb_V_0_vld_in : STD_LOGIC;
    signal video_in_V_strb_V_0_vld_out : STD_LOGIC;
    signal video_in_V_strb_V_0_ack_in : STD_LOGIC;
    signal video_in_V_strb_V_0_ack_out : STD_LOGIC;
    signal video_in_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal video_in_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_strb_V_0_sel : STD_LOGIC;
    signal video_in_V_strb_V_0_load_A : STD_LOGIC;
    signal video_in_V_strb_V_0_load_B : STD_LOGIC;
    signal video_in_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_vld_in : STD_LOGIC;
    signal video_in_V_user_V_0_vld_out : STD_LOGIC;
    signal video_in_V_user_V_0_ack_in : STD_LOGIC;
    signal video_in_V_user_V_0_ack_out : STD_LOGIC;
    signal video_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_user_V_0_sel : STD_LOGIC;
    signal video_in_V_user_V_0_load_A : STD_LOGIC;
    signal video_in_V_user_V_0_load_B : STD_LOGIC;
    signal video_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal video_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_vld_in : STD_LOGIC;
    signal video_in_V_last_V_0_vld_out : STD_LOGIC;
    signal video_in_V_last_V_0_ack_in : STD_LOGIC;
    signal video_in_V_last_V_0_ack_out : STD_LOGIC;
    signal video_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal video_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal video_in_V_last_V_0_sel : STD_LOGIC;
    signal video_in_V_last_V_0_load_A : STD_LOGIC;
    signal video_in_V_last_V_0_load_B : STD_LOGIC;
    signal video_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal video_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal video_out_V_data_V_1_vld_in : STD_LOGIC;
    signal video_out_V_data_V_1_vld_out : STD_LOGIC;
    signal video_out_V_data_V_1_ack_in : STD_LOGIC;
    signal video_out_V_data_V_1_ack_out : STD_LOGIC;
    signal video_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal video_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal video_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal video_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal video_out_V_data_V_1_sel : STD_LOGIC;
    signal video_out_V_data_V_1_load_A : STD_LOGIC;
    signal video_out_V_data_V_1_load_B : STD_LOGIC;
    signal video_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal video_out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_keep_V_1_vld_in : STD_LOGIC;
    signal video_out_V_keep_V_1_vld_out : STD_LOGIC;
    signal video_out_V_keep_V_1_ack_in : STD_LOGIC;
    signal video_out_V_keep_V_1_ack_out : STD_LOGIC;
    signal video_out_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal video_out_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal video_out_V_keep_V_1_sel : STD_LOGIC;
    signal video_out_V_keep_V_1_load_A : STD_LOGIC;
    signal video_out_V_keep_V_1_load_B : STD_LOGIC;
    signal video_out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_out_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal video_out_V_strb_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_strb_V_1_vld_in : STD_LOGIC;
    signal video_out_V_strb_V_1_vld_out : STD_LOGIC;
    signal video_out_V_strb_V_1_ack_in : STD_LOGIC;
    signal video_out_V_strb_V_1_ack_out : STD_LOGIC;
    signal video_out_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal video_out_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal video_out_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal video_out_V_strb_V_1_sel : STD_LOGIC;
    signal video_out_V_strb_V_1_load_A : STD_LOGIC;
    signal video_out_V_strb_V_1_load_B : STD_LOGIC;
    signal video_out_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_out_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal video_out_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_user_V_1_vld_in : STD_LOGIC;
    signal video_out_V_user_V_1_vld_out : STD_LOGIC;
    signal video_out_V_user_V_1_ack_in : STD_LOGIC;
    signal video_out_V_user_V_1_ack_out : STD_LOGIC;
    signal video_out_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal video_out_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal video_out_V_user_V_1_sel : STD_LOGIC;
    signal video_out_V_user_V_1_load_A : STD_LOGIC;
    signal video_out_V_user_V_1_load_B : STD_LOGIC;
    signal video_out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_out_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal video_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_last_V_1_vld_in : STD_LOGIC;
    signal video_out_V_last_V_1_vld_out : STD_LOGIC;
    signal video_out_V_last_V_1_ack_in : STD_LOGIC;
    signal video_out_V_last_V_1_ack_out : STD_LOGIC;
    signal video_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal video_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal video_out_V_last_V_1_sel : STD_LOGIC;
    signal video_out_V_last_V_1_load_A : STD_LOGIC;
    signal video_out_V_last_V_1_load_B : STD_LOGIC;
    signal video_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal video_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal video_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal exitcond_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal video_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter1_exitcond_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_117 : STD_LOGIC_VECTOR (20 downto 0);
    signal exitcond_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal i_1_fu_139_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_145_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixOut_3_fu_207_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_keep_V_1_fu_215_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_strb_V_1_fu_220_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal leftover_V_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal leftover_V_1_fu_200_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_flag00001001 : BOOLEAN;
    signal Y_V_fu_174_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Cr_V_fu_178_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixOut_1_fu_192_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pixOut_fu_188_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (ap_const_logic_1 = video_in_V_data_V_0_vld_out))) then 
                                        video_in_V_data_V_0_sel_rd <= not(video_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_in))) then 
                                        video_in_V_data_V_0_sel_wr <= not(video_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (video_in_V_data_V_0_state = ap_const_lv2_2)))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_0 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_1)))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (video_in_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = video_in_V_data_V_0_ack_out) and (video_in_V_data_V_0_state = ap_const_lv2_1)) or ((video_in_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = video_in_V_data_V_0_vld_in) and (ap_const_logic_0 = video_in_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_data_V_0_vld_in) and (ap_const_logic_1 = video_in_V_data_V_0_ack_out)))))) then 
                    video_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_keep_V_0_ack_out) and (ap_const_logic_1 = video_in_V_keep_V_0_vld_out))) then 
                                        video_in_V_keep_V_0_sel_rd <= not(video_in_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_keep_V_0_vld_in) and (ap_const_logic_1 = video_in_V_keep_V_0_ack_in))) then 
                                        video_in_V_keep_V_0_sel_wr <= not(video_in_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_keep_V_0_vld_in) and (ap_const_logic_1 = video_in_V_keep_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_keep_V_0_state)) or ((ap_const_logic_0 = video_in_V_keep_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_keep_V_0_state)))) then 
                    video_in_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_keep_V_0_vld_in) and (ap_const_logic_0 = video_in_V_keep_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_keep_V_0_state)) or ((ap_const_logic_0 = video_in_V_keep_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_keep_V_0_state)))) then 
                    video_in_V_keep_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_keep_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_keep_V_0_state)) or ((ap_const_logic_1 = video_in_V_keep_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_keep_V_0_state)) or ((ap_const_lv2_3 = video_in_V_keep_V_0_state) and not(((ap_const_logic_1 = video_in_V_keep_V_0_vld_in) and (ap_const_logic_0 = video_in_V_keep_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_keep_V_0_vld_in) and (ap_const_logic_1 = video_in_V_keep_V_0_ack_out)))))) then 
                    video_in_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_logic_1 = video_in_V_last_V_0_vld_out))) then 
                                        video_in_V_last_V_0_sel_rd <= not(video_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_in))) then 
                                        video_in_V_last_V_0_sel_wr <= not(video_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_last_V_0_state)) or ((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_last_V_0_state)))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_0 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_last_V_0_state)) or ((ap_const_logic_0 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_last_V_0_state)))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_last_V_0_state)) or ((ap_const_logic_1 = video_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_last_V_0_state)) or ((ap_const_lv2_3 = video_in_V_last_V_0_state) and not(((ap_const_logic_1 = video_in_V_last_V_0_vld_in) and (ap_const_logic_0 = video_in_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_last_V_0_vld_in) and (ap_const_logic_1 = video_in_V_last_V_0_ack_out)))))) then 
                    video_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_strb_V_0_ack_out) and (ap_const_logic_1 = video_in_V_strb_V_0_vld_out))) then 
                                        video_in_V_strb_V_0_sel_rd <= not(video_in_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_strb_V_0_vld_in) and (ap_const_logic_1 = video_in_V_strb_V_0_ack_in))) then 
                                        video_in_V_strb_V_0_sel_wr <= not(video_in_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_strb_V_0_vld_in) and (ap_const_logic_1 = video_in_V_strb_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_strb_V_0_state)) or ((ap_const_logic_0 = video_in_V_strb_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_strb_V_0_state)))) then 
                    video_in_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_strb_V_0_vld_in) and (ap_const_logic_0 = video_in_V_strb_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_strb_V_0_state)) or ((ap_const_logic_0 = video_in_V_strb_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_strb_V_0_state)))) then 
                    video_in_V_strb_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_strb_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_strb_V_0_state)) or ((ap_const_logic_1 = video_in_V_strb_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_strb_V_0_state)) or ((ap_const_lv2_3 = video_in_V_strb_V_0_state) and not(((ap_const_logic_1 = video_in_V_strb_V_0_vld_in) and (ap_const_logic_0 = video_in_V_strb_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_strb_V_0_vld_in) and (ap_const_logic_1 = video_in_V_strb_V_0_ack_out)))))) then 
                    video_in_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_logic_1 = video_in_V_user_V_0_vld_out))) then 
                                        video_in_V_user_V_0_sel_rd <= not(video_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_in))) then 
                                        video_in_V_user_V_0_sel_wr <= not(video_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_user_V_0_state)) or ((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_user_V_0_state)))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_0 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_3 = video_in_V_user_V_0_state)) or ((ap_const_logic_0 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_user_V_0_state)))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_lv2_2 = video_in_V_user_V_0_state)) or ((ap_const_logic_1 = video_in_V_user_V_0_ack_out) and (ap_const_lv2_1 = video_in_V_user_V_0_state)) or ((ap_const_lv2_3 = video_in_V_user_V_0_state) and not(((ap_const_logic_1 = video_in_V_user_V_0_vld_in) and (ap_const_logic_0 = video_in_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = video_in_V_user_V_0_vld_in) and (ap_const_logic_1 = video_in_V_user_V_0_ack_out)))))) then 
                    video_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    video_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_data_V_1_ack_out) and (ap_const_logic_1 = video_out_V_data_V_1_vld_out))) then 
                                        video_out_V_data_V_1_sel_rd <= not(video_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_data_V_1_vld_in) and (ap_const_logic_1 = video_out_V_data_V_1_ack_in))) then 
                                        video_out_V_data_V_1_sel_wr <= not(video_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_out_V_data_V_1_vld_in) and (ap_const_logic_1 = video_out_V_data_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_data_V_1_state)) or ((ap_const_logic_0 = video_out_V_data_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_data_V_1_state)))) then 
                    video_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_out_V_data_V_1_vld_in) and (ap_const_logic_0 = video_out_V_data_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_data_V_1_state)) or ((ap_const_logic_0 = video_out_V_data_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_data_V_1_state)))) then 
                    video_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_out_V_data_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_data_V_1_state)) or ((ap_const_logic_1 = video_out_V_data_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_data_V_1_state)) or ((ap_const_lv2_3 = video_out_V_data_V_1_state) and not(((ap_const_logic_1 = video_out_V_data_V_1_vld_in) and (ap_const_logic_0 = video_out_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = video_out_V_data_V_1_vld_in) and (ap_const_logic_1 = video_out_V_data_V_1_ack_out)))))) then 
                    video_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    video_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_keep_V_1_ack_out) and (ap_const_logic_1 = video_out_V_keep_V_1_vld_out))) then 
                                        video_out_V_keep_V_1_sel_rd <= not(video_out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_keep_V_1_vld_in) and (ap_const_logic_1 = video_out_V_keep_V_1_ack_in))) then 
                                        video_out_V_keep_V_1_sel_wr <= not(video_out_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_out_V_keep_V_1_vld_in) and (ap_const_logic_1 = video_out_V_keep_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_keep_V_1_state)) or ((ap_const_logic_0 = video_out_V_keep_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_keep_V_1_state)))) then 
                    video_out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_out_V_keep_V_1_vld_in) and (ap_const_logic_0 = video_out_V_keep_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_keep_V_1_state)) or ((ap_const_logic_0 = video_out_V_keep_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_keep_V_1_state)))) then 
                    video_out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_out_V_keep_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_keep_V_1_state)) or ((ap_const_logic_1 = video_out_V_keep_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_keep_V_1_state)) or ((ap_const_lv2_3 = video_out_V_keep_V_1_state) and not(((ap_const_logic_1 = video_out_V_keep_V_1_vld_in) and (ap_const_logic_0 = video_out_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = video_out_V_keep_V_1_vld_in) and (ap_const_logic_1 = video_out_V_keep_V_1_ack_out)))))) then 
                    video_out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    video_out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_last_V_1_ack_out) and (ap_const_logic_1 = video_out_V_last_V_1_vld_out))) then 
                                        video_out_V_last_V_1_sel_rd <= not(video_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_last_V_1_vld_in) and (ap_const_logic_1 = video_out_V_last_V_1_ack_in))) then 
                                        video_out_V_last_V_1_sel_wr <= not(video_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_out_V_last_V_1_vld_in) and (ap_const_logic_1 = video_out_V_last_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_last_V_1_state)) or ((ap_const_logic_0 = video_out_V_last_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_last_V_1_state)))) then 
                    video_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_out_V_last_V_1_vld_in) and (ap_const_logic_0 = video_out_V_last_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_last_V_1_state)) or ((ap_const_logic_0 = video_out_V_last_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_last_V_1_state)))) then 
                    video_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_out_V_last_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_last_V_1_state)) or ((ap_const_logic_1 = video_out_V_last_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_last_V_1_state)) or ((ap_const_lv2_3 = video_out_V_last_V_1_state) and not(((ap_const_logic_1 = video_out_V_last_V_1_vld_in) and (ap_const_logic_0 = video_out_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = video_out_V_last_V_1_vld_in) and (ap_const_logic_1 = video_out_V_last_V_1_ack_out)))))) then 
                    video_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    video_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_out_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_strb_V_1_ack_out) and (ap_const_logic_1 = video_out_V_strb_V_1_vld_out))) then 
                                        video_out_V_strb_V_1_sel_rd <= not(video_out_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_strb_V_1_vld_in) and (ap_const_logic_1 = video_out_V_strb_V_1_ack_in))) then 
                                        video_out_V_strb_V_1_sel_wr <= not(video_out_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_out_V_strb_V_1_vld_in) and (ap_const_logic_1 = video_out_V_strb_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_strb_V_1_state)) or ((ap_const_logic_0 = video_out_V_strb_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_strb_V_1_state)))) then 
                    video_out_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_out_V_strb_V_1_vld_in) and (ap_const_logic_0 = video_out_V_strb_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_strb_V_1_state)) or ((ap_const_logic_0 = video_out_V_strb_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_strb_V_1_state)))) then 
                    video_out_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_out_V_strb_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_strb_V_1_state)) or ((ap_const_logic_1 = video_out_V_strb_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_strb_V_1_state)) or ((ap_const_lv2_3 = video_out_V_strb_V_1_state) and not(((ap_const_logic_1 = video_out_V_strb_V_1_vld_in) and (ap_const_logic_0 = video_out_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = video_out_V_strb_V_1_vld_in) and (ap_const_logic_1 = video_out_V_strb_V_1_ack_out)))))) then 
                    video_out_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    video_out_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    video_out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_user_V_1_ack_out) and (ap_const_logic_1 = video_out_V_user_V_1_vld_out))) then 
                                        video_out_V_user_V_1_sel_rd <= not(video_out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = video_out_V_user_V_1_vld_in) and (ap_const_logic_1 = video_out_V_user_V_1_ack_in))) then 
                                        video_out_V_user_V_1_sel_wr <= not(video_out_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    video_out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                video_out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = video_out_V_user_V_1_vld_in) and (ap_const_logic_1 = video_out_V_user_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_user_V_1_state)) or ((ap_const_logic_0 = video_out_V_user_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_user_V_1_state)))) then 
                    video_out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = video_out_V_user_V_1_vld_in) and (ap_const_logic_0 = video_out_V_user_V_1_ack_out) and (ap_const_lv2_3 = video_out_V_user_V_1_state)) or ((ap_const_logic_0 = video_out_V_user_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_user_V_1_state)))) then 
                    video_out_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = video_out_V_user_V_1_vld_in) and (ap_const_lv2_2 = video_out_V_user_V_1_state)) or ((ap_const_logic_1 = video_out_V_user_V_1_ack_out) and (ap_const_lv2_1 = video_out_V_user_V_1_state)) or ((ap_const_lv2_3 = video_out_V_user_V_1_state) and not(((ap_const_logic_1 = video_out_V_user_V_1_vld_in) and (ap_const_logic_0 = video_out_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = video_out_V_user_V_1_vld_in) and (ap_const_logic_1 = video_out_V_user_V_1_ack_out)))))) then 
                    video_out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    video_out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_133_p2))) then 
                i_reg_117 <= i_1_fu_139_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_117 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    leftover_V_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
                leftover_V_fu_80 <= leftover_V_1_fu_200_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                leftover_V_fu_80 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_reg_237 <= exitcond_reg_237;
                exitcond_reg_237 <= exitcond_fu_133_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_fu_133_p2))) then
                tmp_reg_246 <= tmp_fu_145_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_data_V_0_load_A)) then
                video_in_V_data_V_0_payload_A <= video_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_data_V_0_load_B)) then
                video_in_V_data_V_0_payload_B <= video_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_keep_V_0_load_A)) then
                video_in_V_keep_V_0_payload_A <= video_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_keep_V_0_load_B)) then
                video_in_V_keep_V_0_payload_B <= video_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_last_V_0_load_A)) then
                video_in_V_last_V_0_payload_A <= video_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_last_V_0_load_B)) then
                video_in_V_last_V_0_payload_B <= video_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_strb_V_0_load_A)) then
                video_in_V_strb_V_0_payload_A <= video_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_strb_V_0_load_B)) then
                video_in_V_strb_V_0_payload_B <= video_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_user_V_0_load_A)) then
                video_in_V_user_V_0_payload_A <= video_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_in_V_user_V_0_load_B)) then
                video_in_V_user_V_0_payload_B <= video_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_data_V_1_load_A)) then
                video_out_V_data_V_1_payload_A <= pixOut_3_fu_207_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_data_V_1_load_B)) then
                video_out_V_data_V_1_payload_B <= pixOut_3_fu_207_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_keep_V_1_load_A)) then
                video_out_V_keep_V_1_payload_A <= tmp_keep_V_1_fu_215_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_keep_V_1_load_B)) then
                video_out_V_keep_V_1_payload_B <= tmp_keep_V_1_fu_215_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_last_V_1_load_A)) then
                video_out_V_last_V_1_payload_A <= video_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_last_V_1_load_B)) then
                video_out_V_last_V_1_payload_B <= video_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_strb_V_1_load_A)) then
                video_out_V_strb_V_1_payload_A <= tmp_strb_V_1_fu_220_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_strb_V_1_load_B)) then
                video_out_V_strb_V_1_payload_B <= tmp_strb_V_1_fu_220_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_user_V_1_load_A)) then
                video_out_V_user_V_1_payload_A <= video_in_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = video_out_V_user_V_1_load_B)) then
                video_out_V_user_V_1_payload_B <= video_in_V_user_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond_fu_133_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_flag00011011)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_fu_133_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_fu_133_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Cr_V_fu_178_p4 <= video_in_V_data_V_0_data_out(23 downto 16);
    Y_V_fu_174_p1 <= video_in_V_data_V_0_data_out(8 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00001001_assign_proc : process(video_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter1, exitcond_reg_237)
    begin
                ap_block_pp0_stage0_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_const_logic_0 = video_in_V_data_V_0_vld_out));
    end process;


    ap_block_pp0_stage0_flag00011001_assign_proc : process(video_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_enable_reg_pp0_iter2, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_flag00011001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (((ap_const_lv1_0 = exitcond_reg_237) and (ap_const_logic_0 = video_in_V_data_V_0_vld_out)) or (ap_const_boolean_1 = ap_block_state4_io))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(video_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_enable_reg_pp0_iter2, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (((ap_const_lv1_0 = exitcond_reg_237) and (ap_const_logic_0 = video_in_V_data_V_0_vld_out)) or (ap_const_boolean_1 = ap_block_state4_io))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(video_out_V_data_V_1_ack_in, exitcond_reg_237)
    begin
                ap_block_state4_io <= ((ap_const_lv1_0 = exitcond_reg_237) and (ap_const_logic_0 = video_out_V_data_V_1_ack_in));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(video_in_V_data_V_0_vld_out, exitcond_reg_237)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((ap_const_lv1_0 = exitcond_reg_237) and (ap_const_logic_0 = video_in_V_data_V_0_vld_out));
    end process;


    ap_block_state5_io_assign_proc : process(video_out_V_data_V_1_ack_in, ap_reg_pp0_iter1_exitcond_reg_237)
    begin
                ap_block_state5_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_reg_237) and (ap_const_logic_0 = video_out_V_data_V_1_ack_in));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_133_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_fu_133_p2)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    exitcond_fu_133_p2 <= "1" when (i_reg_117 = ap_const_lv21_1FA400) else "0";
    i_1_fu_139_p2 <= std_logic_vector(unsigned(i_reg_117) + unsigned(ap_const_lv21_1));
    leftover_V_1_fu_200_p3 <= 
        leftover_V_fu_80 when (tmp_reg_246(0) = '1') else 
        Cr_V_fu_178_p4;
    pixOut_1_fu_192_p3 <= (leftover_V_fu_80 & Y_V_fu_174_p1);
    pixOut_3_fu_207_p3 <= 
        pixOut_1_fu_192_p3 when (tmp_reg_246(0) = '1') else 
        pixOut_fu_188_p1;
    pixOut_fu_188_p1 <= video_in_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_fu_145_p1 <= i_reg_117(1 - 1 downto 0);
    tmp_keep_V_1_fu_215_p1 <= video_in_V_keep_V_0_data_out(2 - 1 downto 0);
    tmp_strb_V_1_fu_220_p1 <= video_in_V_strb_V_0_data_out(2 - 1 downto 0);

    video_in_TDATA_blk_n_assign_proc : process(video_in_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, exitcond_reg_237)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_reg_237))) then 
            video_in_TDATA_blk_n <= video_in_V_data_V_0_state(0);
        else 
            video_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_in_TREADY <= video_in_V_last_V_0_state(1);
    video_in_V_data_V_0_ack_in <= video_in_V_data_V_0_state(1);

    video_in_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_data_V_0_data_out_assign_proc : process(video_in_V_data_V_0_payload_A, video_in_V_data_V_0_payload_B, video_in_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_data_V_0_sel)) then 
            video_in_V_data_V_0_data_out <= video_in_V_data_V_0_payload_B;
        else 
            video_in_V_data_V_0_data_out <= video_in_V_data_V_0_payload_A;
        end if; 
    end process;

    video_in_V_data_V_0_load_A <= (video_in_V_data_V_0_state_cmp_full and not(video_in_V_data_V_0_sel_wr));
    video_in_V_data_V_0_load_B <= (video_in_V_data_V_0_sel_wr and video_in_V_data_V_0_state_cmp_full);
    video_in_V_data_V_0_sel <= video_in_V_data_V_0_sel_rd;
    video_in_V_data_V_0_state_cmp_full <= '0' when (video_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_data_V_0_vld_in <= video_in_TVALID;
    video_in_V_data_V_0_vld_out <= video_in_V_data_V_0_state(0);
    video_in_V_keep_V_0_ack_in <= video_in_V_keep_V_0_state(1);

    video_in_V_keep_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_in_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_keep_V_0_data_out_assign_proc : process(video_in_V_keep_V_0_payload_A, video_in_V_keep_V_0_payload_B, video_in_V_keep_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_keep_V_0_sel)) then 
            video_in_V_keep_V_0_data_out <= video_in_V_keep_V_0_payload_B;
        else 
            video_in_V_keep_V_0_data_out <= video_in_V_keep_V_0_payload_A;
        end if; 
    end process;

    video_in_V_keep_V_0_load_A <= (video_in_V_keep_V_0_state_cmp_full and not(video_in_V_keep_V_0_sel_wr));
    video_in_V_keep_V_0_load_B <= (video_in_V_keep_V_0_sel_wr and video_in_V_keep_V_0_state_cmp_full);
    video_in_V_keep_V_0_sel <= video_in_V_keep_V_0_sel_rd;
    video_in_V_keep_V_0_state_cmp_full <= '0' when (video_in_V_keep_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_keep_V_0_vld_in <= video_in_TVALID;
    video_in_V_keep_V_0_vld_out <= video_in_V_keep_V_0_state(0);
    video_in_V_last_V_0_ack_in <= video_in_V_last_V_0_state(1);

    video_in_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_last_V_0_data_out_assign_proc : process(video_in_V_last_V_0_payload_A, video_in_V_last_V_0_payload_B, video_in_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_last_V_0_sel)) then 
            video_in_V_last_V_0_data_out <= video_in_V_last_V_0_payload_B;
        else 
            video_in_V_last_V_0_data_out <= video_in_V_last_V_0_payload_A;
        end if; 
    end process;

    video_in_V_last_V_0_load_A <= (video_in_V_last_V_0_state_cmp_full and not(video_in_V_last_V_0_sel_wr));
    video_in_V_last_V_0_load_B <= (video_in_V_last_V_0_sel_wr and video_in_V_last_V_0_state_cmp_full);
    video_in_V_last_V_0_sel <= video_in_V_last_V_0_sel_rd;
    video_in_V_last_V_0_state_cmp_full <= '0' when (video_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_last_V_0_vld_in <= video_in_TVALID;
    video_in_V_last_V_0_vld_out <= video_in_V_last_V_0_state(0);
    video_in_V_strb_V_0_ack_in <= video_in_V_strb_V_0_state(1);

    video_in_V_strb_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_in_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_strb_V_0_data_out_assign_proc : process(video_in_V_strb_V_0_payload_A, video_in_V_strb_V_0_payload_B, video_in_V_strb_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_strb_V_0_sel)) then 
            video_in_V_strb_V_0_data_out <= video_in_V_strb_V_0_payload_B;
        else 
            video_in_V_strb_V_0_data_out <= video_in_V_strb_V_0_payload_A;
        end if; 
    end process;

    video_in_V_strb_V_0_load_A <= (video_in_V_strb_V_0_state_cmp_full and not(video_in_V_strb_V_0_sel_wr));
    video_in_V_strb_V_0_load_B <= (video_in_V_strb_V_0_sel_wr and video_in_V_strb_V_0_state_cmp_full);
    video_in_V_strb_V_0_sel <= video_in_V_strb_V_0_sel_rd;
    video_in_V_strb_V_0_state_cmp_full <= '0' when (video_in_V_strb_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_strb_V_0_vld_in <= video_in_TVALID;
    video_in_V_strb_V_0_vld_out <= video_in_V_strb_V_0_state(0);
    video_in_V_user_V_0_ack_in <= video_in_V_user_V_0_state(1);

    video_in_V_user_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            video_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    video_in_V_user_V_0_data_out_assign_proc : process(video_in_V_user_V_0_payload_A, video_in_V_user_V_0_payload_B, video_in_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = video_in_V_user_V_0_sel)) then 
            video_in_V_user_V_0_data_out <= video_in_V_user_V_0_payload_B;
        else 
            video_in_V_user_V_0_data_out <= video_in_V_user_V_0_payload_A;
        end if; 
    end process;

    video_in_V_user_V_0_load_A <= (video_in_V_user_V_0_state_cmp_full and not(video_in_V_user_V_0_sel_wr));
    video_in_V_user_V_0_load_B <= (video_in_V_user_V_0_sel_wr and video_in_V_user_V_0_state_cmp_full);
    video_in_V_user_V_0_sel <= video_in_V_user_V_0_sel_rd;
    video_in_V_user_V_0_state_cmp_full <= '0' when (video_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    video_in_V_user_V_0_vld_in <= video_in_TVALID;
    video_in_V_user_V_0_vld_out <= video_in_V_user_V_0_state(0);
    video_out_TDATA <= video_out_V_data_V_1_data_out;

    video_out_TDATA_blk_n_assign_proc : process(video_out_V_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, exitcond_reg_237, ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond_reg_237)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_reg_237)) or ((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_reg_237)))) then 
            video_out_TDATA_blk_n <= video_out_V_data_V_1_state(1);
        else 
            video_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_out_TKEEP <= video_out_V_keep_V_1_data_out;
    video_out_TLAST <= video_out_V_last_V_1_data_out;
    video_out_TSTRB <= video_out_V_strb_V_1_data_out;
    video_out_TUSER <= video_out_V_user_V_1_data_out;
    video_out_TVALID <= video_out_V_last_V_1_state(0);
    video_out_V_data_V_1_ack_in <= video_out_V_data_V_1_state(1);
    video_out_V_data_V_1_ack_out <= video_out_TREADY;

    video_out_V_data_V_1_data_out_assign_proc : process(video_out_V_data_V_1_payload_A, video_out_V_data_V_1_payload_B, video_out_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = video_out_V_data_V_1_sel)) then 
            video_out_V_data_V_1_data_out <= video_out_V_data_V_1_payload_B;
        else 
            video_out_V_data_V_1_data_out <= video_out_V_data_V_1_payload_A;
        end if; 
    end process;

    video_out_V_data_V_1_load_A <= (video_out_V_data_V_1_state_cmp_full and not(video_out_V_data_V_1_sel_wr));
    video_out_V_data_V_1_load_B <= (video_out_V_data_V_1_sel_wr and video_out_V_data_V_1_state_cmp_full);
    video_out_V_data_V_1_sel <= video_out_V_data_V_1_sel_rd;
    video_out_V_data_V_1_state_cmp_full <= '0' when (video_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    video_out_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            video_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    video_out_V_data_V_1_vld_out <= video_out_V_data_V_1_state(0);
    video_out_V_keep_V_1_ack_in <= video_out_V_keep_V_1_state(1);
    video_out_V_keep_V_1_ack_out <= video_out_TREADY;

    video_out_V_keep_V_1_data_out_assign_proc : process(video_out_V_keep_V_1_payload_A, video_out_V_keep_V_1_payload_B, video_out_V_keep_V_1_sel)
    begin
        if ((ap_const_logic_1 = video_out_V_keep_V_1_sel)) then 
            video_out_V_keep_V_1_data_out <= video_out_V_keep_V_1_payload_B;
        else 
            video_out_V_keep_V_1_data_out <= video_out_V_keep_V_1_payload_A;
        end if; 
    end process;

    video_out_V_keep_V_1_load_A <= (video_out_V_keep_V_1_state_cmp_full and not(video_out_V_keep_V_1_sel_wr));
    video_out_V_keep_V_1_load_B <= (video_out_V_keep_V_1_sel_wr and video_out_V_keep_V_1_state_cmp_full);
    video_out_V_keep_V_1_sel <= video_out_V_keep_V_1_sel_rd;
    video_out_V_keep_V_1_state_cmp_full <= '0' when (video_out_V_keep_V_1_state = ap_const_lv2_1) else '1';

    video_out_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            video_out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    video_out_V_keep_V_1_vld_out <= video_out_V_keep_V_1_state(0);
    video_out_V_last_V_1_ack_in <= video_out_V_last_V_1_state(1);
    video_out_V_last_V_1_ack_out <= video_out_TREADY;

    video_out_V_last_V_1_data_out_assign_proc : process(video_out_V_last_V_1_payload_A, video_out_V_last_V_1_payload_B, video_out_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = video_out_V_last_V_1_sel)) then 
            video_out_V_last_V_1_data_out <= video_out_V_last_V_1_payload_B;
        else 
            video_out_V_last_V_1_data_out <= video_out_V_last_V_1_payload_A;
        end if; 
    end process;

    video_out_V_last_V_1_load_A <= (video_out_V_last_V_1_state_cmp_full and not(video_out_V_last_V_1_sel_wr));
    video_out_V_last_V_1_load_B <= (video_out_V_last_V_1_sel_wr and video_out_V_last_V_1_state_cmp_full);
    video_out_V_last_V_1_sel <= video_out_V_last_V_1_sel_rd;
    video_out_V_last_V_1_state_cmp_full <= '0' when (video_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    video_out_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            video_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    video_out_V_last_V_1_vld_out <= video_out_V_last_V_1_state(0);
    video_out_V_strb_V_1_ack_in <= video_out_V_strb_V_1_state(1);
    video_out_V_strb_V_1_ack_out <= video_out_TREADY;

    video_out_V_strb_V_1_data_out_assign_proc : process(video_out_V_strb_V_1_payload_A, video_out_V_strb_V_1_payload_B, video_out_V_strb_V_1_sel)
    begin
        if ((ap_const_logic_1 = video_out_V_strb_V_1_sel)) then 
            video_out_V_strb_V_1_data_out <= video_out_V_strb_V_1_payload_B;
        else 
            video_out_V_strb_V_1_data_out <= video_out_V_strb_V_1_payload_A;
        end if; 
    end process;

    video_out_V_strb_V_1_load_A <= (video_out_V_strb_V_1_state_cmp_full and not(video_out_V_strb_V_1_sel_wr));
    video_out_V_strb_V_1_load_B <= (video_out_V_strb_V_1_sel_wr and video_out_V_strb_V_1_state_cmp_full);
    video_out_V_strb_V_1_sel <= video_out_V_strb_V_1_sel_rd;
    video_out_V_strb_V_1_state_cmp_full <= '0' when (video_out_V_strb_V_1_state = ap_const_lv2_1) else '1';

    video_out_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_out_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            video_out_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    video_out_V_strb_V_1_vld_out <= video_out_V_strb_V_1_state(0);
    video_out_V_user_V_1_ack_in <= video_out_V_user_V_1_state(1);
    video_out_V_user_V_1_ack_out <= video_out_TREADY;

    video_out_V_user_V_1_data_out_assign_proc : process(video_out_V_user_V_1_payload_A, video_out_V_user_V_1_payload_B, video_out_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = video_out_V_user_V_1_sel)) then 
            video_out_V_user_V_1_data_out <= video_out_V_user_V_1_payload_B;
        else 
            video_out_V_user_V_1_data_out <= video_out_V_user_V_1_payload_A;
        end if; 
    end process;

    video_out_V_user_V_1_load_A <= (video_out_V_user_V_1_state_cmp_full and not(video_out_V_user_V_1_sel_wr));
    video_out_V_user_V_1_load_B <= (video_out_V_user_V_1_sel_wr and video_out_V_user_V_1_state_cmp_full);
    video_out_V_user_V_1_sel <= video_out_V_user_V_1_sel_rd;
    video_out_V_user_V_1_state_cmp_full <= '0' when (video_out_V_user_V_1_state = ap_const_lv2_1) else '1';

    video_out_V_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_237, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_237) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            video_out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            video_out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    video_out_V_user_V_1_vld_out <= video_out_V_user_V_1_state(0);
end behav;
