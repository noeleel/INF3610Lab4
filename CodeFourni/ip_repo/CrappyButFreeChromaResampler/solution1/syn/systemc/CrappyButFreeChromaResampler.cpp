// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "CrappyButFreeChromaResampler.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CrappyButFreeChromaResampler::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic CrappyButFreeChromaResampler::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> CrappyButFreeChromaResampler::ap_ST_fsm_state1 = "1";
const sc_lv<4> CrappyButFreeChromaResampler::ap_ST_fsm_state2 = "10";
const sc_lv<4> CrappyButFreeChromaResampler::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> CrappyButFreeChromaResampler::ap_ST_fsm_state6 = "1000";
const bool CrappyButFreeChromaResampler::ap_const_boolean_1 = true;
const sc_lv<1> CrappyButFreeChromaResampler::ap_const_lv1_0 = "0";
const sc_lv<1> CrappyButFreeChromaResampler::ap_const_lv1_1 = "1";
const sc_lv<2> CrappyButFreeChromaResampler::ap_const_lv2_0 = "00";
const sc_lv<2> CrappyButFreeChromaResampler::ap_const_lv2_2 = "10";
const sc_lv<2> CrappyButFreeChromaResampler::ap_const_lv2_3 = "11";
const sc_lv<2> CrappyButFreeChromaResampler::ap_const_lv2_1 = "1";
const sc_lv<32> CrappyButFreeChromaResampler::ap_const_lv32_2 = "10";
const bool CrappyButFreeChromaResampler::ap_const_boolean_0 = false;
const sc_lv<32> CrappyButFreeChromaResampler::ap_const_lv32_1 = "1";
const sc_lv<21> CrappyButFreeChromaResampler::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<8> CrappyButFreeChromaResampler::ap_const_lv8_0 = "00000000";
const sc_lv<32> CrappyButFreeChromaResampler::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<21> CrappyButFreeChromaResampler::ap_const_lv21_1FA400 = "111111010010000000000";
const sc_lv<21> CrappyButFreeChromaResampler::ap_const_lv21_1 = "1";
const sc_lv<32> CrappyButFreeChromaResampler::ap_const_lv32_10 = "10000";
const sc_lv<32> CrappyButFreeChromaResampler::ap_const_lv32_17 = "10111";

CrappyButFreeChromaResampler::CrappyButFreeChromaResampler(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Cr_V_fu_178_p4);
    sensitive << ( video_in_V_data_V_0_data_out );

    SC_METHOD(thread_Y_V_fu_174_p1);
    sensitive << ( video_in_V_data_V_0_data_out );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( video_out_V_data_V_1_ack_in );
    sensitive << ( exitcond_reg_237 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( exitcond_reg_237 );

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( video_out_V_data_V_1_ack_in );
    sensitive << ( ap_reg_pp0_iter1_exitcond_reg_237 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_fu_133_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond_fu_133_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_117 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_1_fu_139_p2);
    sensitive << ( i_reg_117 );

    SC_METHOD(thread_leftover_V_1_fu_200_p3);
    sensitive << ( tmp_reg_246 );
    sensitive << ( leftover_V_fu_80 );
    sensitive << ( Cr_V_fu_178_p4 );

    SC_METHOD(thread_pixOut_1_fu_192_p3);
    sensitive << ( leftover_V_fu_80 );
    sensitive << ( Y_V_fu_174_p1 );

    SC_METHOD(thread_pixOut_3_fu_207_p3);
    sensitive << ( tmp_reg_246 );
    sensitive << ( pixOut_1_fu_192_p3 );
    sensitive << ( pixOut_fu_188_p1 );

    SC_METHOD(thread_pixOut_fu_188_p1);
    sensitive << ( video_in_V_data_V_0_data_out );

    SC_METHOD(thread_tmp_fu_145_p1);
    sensitive << ( i_reg_117 );

    SC_METHOD(thread_tmp_keep_V_1_fu_215_p1);
    sensitive << ( video_in_V_keep_V_0_data_out );

    SC_METHOD(thread_tmp_strb_V_1_fu_220_p1);
    sensitive << ( video_in_V_strb_V_0_data_out );

    SC_METHOD(thread_video_in_TDATA_blk_n);
    sensitive << ( video_in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_reg_237 );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_in);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_in_V_data_V_0_data_out);
    sensitive << ( video_in_V_data_V_0_payload_A );
    sensitive << ( video_in_V_data_V_0_payload_B );
    sensitive << ( video_in_V_data_V_0_sel );

    SC_METHOD(thread_video_in_V_data_V_0_load_A);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_load_B);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_sel);
    sensitive << ( video_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_data_V_0_state_cmp_full);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_data_V_0_vld_out);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_keep_V_0_ack_in);
    sensitive << ( video_in_V_keep_V_0_state );

    SC_METHOD(thread_video_in_V_keep_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_in_V_keep_V_0_data_out);
    sensitive << ( video_in_V_keep_V_0_payload_A );
    sensitive << ( video_in_V_keep_V_0_payload_B );
    sensitive << ( video_in_V_keep_V_0_sel );

    SC_METHOD(thread_video_in_V_keep_V_0_load_A);
    sensitive << ( video_in_V_keep_V_0_sel_wr );
    sensitive << ( video_in_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_keep_V_0_load_B);
    sensitive << ( video_in_V_keep_V_0_sel_wr );
    sensitive << ( video_in_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_keep_V_0_sel);
    sensitive << ( video_in_V_keep_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_keep_V_0_state_cmp_full);
    sensitive << ( video_in_V_keep_V_0_state );

    SC_METHOD(thread_video_in_V_keep_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_keep_V_0_vld_out);
    sensitive << ( video_in_V_keep_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_ack_in);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_in_V_last_V_0_data_out);
    sensitive << ( video_in_V_last_V_0_payload_A );
    sensitive << ( video_in_V_last_V_0_payload_B );
    sensitive << ( video_in_V_last_V_0_sel );

    SC_METHOD(thread_video_in_V_last_V_0_load_A);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_load_B);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_sel);
    sensitive << ( video_in_V_last_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_last_V_0_state_cmp_full);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_last_V_0_vld_out);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_strb_V_0_ack_in);
    sensitive << ( video_in_V_strb_V_0_state );

    SC_METHOD(thread_video_in_V_strb_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_in_V_strb_V_0_data_out);
    sensitive << ( video_in_V_strb_V_0_payload_A );
    sensitive << ( video_in_V_strb_V_0_payload_B );
    sensitive << ( video_in_V_strb_V_0_sel );

    SC_METHOD(thread_video_in_V_strb_V_0_load_A);
    sensitive << ( video_in_V_strb_V_0_sel_wr );
    sensitive << ( video_in_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_strb_V_0_load_B);
    sensitive << ( video_in_V_strb_V_0_sel_wr );
    sensitive << ( video_in_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_strb_V_0_sel);
    sensitive << ( video_in_V_strb_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_strb_V_0_state_cmp_full);
    sensitive << ( video_in_V_strb_V_0_state );

    SC_METHOD(thread_video_in_V_strb_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_strb_V_0_vld_out);
    sensitive << ( video_in_V_strb_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_in);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_in_V_user_V_0_data_out);
    sensitive << ( video_in_V_user_V_0_payload_A );
    sensitive << ( video_in_V_user_V_0_payload_B );
    sensitive << ( video_in_V_user_V_0_sel );

    SC_METHOD(thread_video_in_V_user_V_0_load_A);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_load_B);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_sel);
    sensitive << ( video_in_V_user_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_user_V_0_state_cmp_full);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_user_V_0_vld_out);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_out_TDATA);
    sensitive << ( video_out_V_data_V_1_data_out );

    SC_METHOD(thread_video_out_TDATA_blk_n);
    sensitive << ( video_out_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_reg_237 );

    SC_METHOD(thread_video_out_TKEEP);
    sensitive << ( video_out_V_keep_V_1_data_out );

    SC_METHOD(thread_video_out_TLAST);
    sensitive << ( video_out_V_last_V_1_data_out );

    SC_METHOD(thread_video_out_TSTRB);
    sensitive << ( video_out_V_strb_V_1_data_out );

    SC_METHOD(thread_video_out_TUSER);
    sensitive << ( video_out_V_user_V_1_data_out );

    SC_METHOD(thread_video_out_TVALID);
    sensitive << ( video_out_V_last_V_1_state );

    SC_METHOD(thread_video_out_V_data_V_1_ack_in);
    sensitive << ( video_out_V_data_V_1_state );

    SC_METHOD(thread_video_out_V_data_V_1_ack_out);
    sensitive << ( video_out_TREADY );

    SC_METHOD(thread_video_out_V_data_V_1_data_out);
    sensitive << ( video_out_V_data_V_1_payload_A );
    sensitive << ( video_out_V_data_V_1_payload_B );
    sensitive << ( video_out_V_data_V_1_sel );

    SC_METHOD(thread_video_out_V_data_V_1_load_A);
    sensitive << ( video_out_V_data_V_1_sel_wr );
    sensitive << ( video_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_data_V_1_load_B);
    sensitive << ( video_out_V_data_V_1_sel_wr );
    sensitive << ( video_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_data_V_1_sel);
    sensitive << ( video_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_video_out_V_data_V_1_state_cmp_full);
    sensitive << ( video_out_V_data_V_1_state );

    SC_METHOD(thread_video_out_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_out_V_data_V_1_vld_out);
    sensitive << ( video_out_V_data_V_1_state );

    SC_METHOD(thread_video_out_V_keep_V_1_ack_in);
    sensitive << ( video_out_V_keep_V_1_state );

    SC_METHOD(thread_video_out_V_keep_V_1_ack_out);
    sensitive << ( video_out_TREADY );

    SC_METHOD(thread_video_out_V_keep_V_1_data_out);
    sensitive << ( video_out_V_keep_V_1_payload_A );
    sensitive << ( video_out_V_keep_V_1_payload_B );
    sensitive << ( video_out_V_keep_V_1_sel );

    SC_METHOD(thread_video_out_V_keep_V_1_load_A);
    sensitive << ( video_out_V_keep_V_1_sel_wr );
    sensitive << ( video_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_keep_V_1_load_B);
    sensitive << ( video_out_V_keep_V_1_sel_wr );
    sensitive << ( video_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_keep_V_1_sel);
    sensitive << ( video_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_video_out_V_keep_V_1_state_cmp_full);
    sensitive << ( video_out_V_keep_V_1_state );

    SC_METHOD(thread_video_out_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_out_V_keep_V_1_vld_out);
    sensitive << ( video_out_V_keep_V_1_state );

    SC_METHOD(thread_video_out_V_last_V_1_ack_in);
    sensitive << ( video_out_V_last_V_1_state );

    SC_METHOD(thread_video_out_V_last_V_1_ack_out);
    sensitive << ( video_out_TREADY );

    SC_METHOD(thread_video_out_V_last_V_1_data_out);
    sensitive << ( video_out_V_last_V_1_payload_A );
    sensitive << ( video_out_V_last_V_1_payload_B );
    sensitive << ( video_out_V_last_V_1_sel );

    SC_METHOD(thread_video_out_V_last_V_1_load_A);
    sensitive << ( video_out_V_last_V_1_sel_wr );
    sensitive << ( video_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_last_V_1_load_B);
    sensitive << ( video_out_V_last_V_1_sel_wr );
    sensitive << ( video_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_last_V_1_sel);
    sensitive << ( video_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_video_out_V_last_V_1_state_cmp_full);
    sensitive << ( video_out_V_last_V_1_state );

    SC_METHOD(thread_video_out_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_out_V_last_V_1_vld_out);
    sensitive << ( video_out_V_last_V_1_state );

    SC_METHOD(thread_video_out_V_strb_V_1_ack_in);
    sensitive << ( video_out_V_strb_V_1_state );

    SC_METHOD(thread_video_out_V_strb_V_1_ack_out);
    sensitive << ( video_out_TREADY );

    SC_METHOD(thread_video_out_V_strb_V_1_data_out);
    sensitive << ( video_out_V_strb_V_1_payload_A );
    sensitive << ( video_out_V_strb_V_1_payload_B );
    sensitive << ( video_out_V_strb_V_1_sel );

    SC_METHOD(thread_video_out_V_strb_V_1_load_A);
    sensitive << ( video_out_V_strb_V_1_sel_wr );
    sensitive << ( video_out_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_strb_V_1_load_B);
    sensitive << ( video_out_V_strb_V_1_sel_wr );
    sensitive << ( video_out_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_strb_V_1_sel);
    sensitive << ( video_out_V_strb_V_1_sel_rd );

    SC_METHOD(thread_video_out_V_strb_V_1_state_cmp_full);
    sensitive << ( video_out_V_strb_V_1_state );

    SC_METHOD(thread_video_out_V_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_out_V_strb_V_1_vld_out);
    sensitive << ( video_out_V_strb_V_1_state );

    SC_METHOD(thread_video_out_V_user_V_1_ack_in);
    sensitive << ( video_out_V_user_V_1_state );

    SC_METHOD(thread_video_out_V_user_V_1_ack_out);
    sensitive << ( video_out_TREADY );

    SC_METHOD(thread_video_out_V_user_V_1_data_out);
    sensitive << ( video_out_V_user_V_1_payload_A );
    sensitive << ( video_out_V_user_V_1_payload_B );
    sensitive << ( video_out_V_user_V_1_sel );

    SC_METHOD(thread_video_out_V_user_V_1_load_A);
    sensitive << ( video_out_V_user_V_1_sel_wr );
    sensitive << ( video_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_user_V_1_load_B);
    sensitive << ( video_out_V_user_V_1_sel_wr );
    sensitive << ( video_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_video_out_V_user_V_1_sel);
    sensitive << ( video_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_video_out_V_user_V_1_state_cmp_full);
    sensitive << ( video_out_V_user_V_1_state );

    SC_METHOD(thread_video_out_V_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_237 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_video_out_V_user_V_1_vld_out);
    sensitive << ( video_out_V_user_V_1_state );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_fu_133_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    video_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_data_V_0_state = "00";
    video_in_V_keep_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_keep_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_keep_V_0_state = "00";
    video_in_V_strb_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_strb_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_strb_V_0_state = "00";
    video_in_V_user_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_user_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_user_V_0_state = "00";
    video_in_V_last_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_last_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_last_V_0_state = "00";
    video_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    video_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    video_out_V_data_V_1_state = "00";
    video_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    video_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    video_out_V_keep_V_1_state = "00";
    video_out_V_strb_V_1_sel_rd = SC_LOGIC_0;
    video_out_V_strb_V_1_sel_wr = SC_LOGIC_0;
    video_out_V_strb_V_1_state = "00";
    video_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    video_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    video_out_V_user_V_1_state = "00";
    video_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    video_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    video_out_V_last_V_1_state = "00";
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CrappyButFreeChromaResampler_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_out_TDATA, "(port)video_out_TDATA");
    sc_trace(mVcdFile, video_out_TVALID, "(port)video_out_TVALID");
    sc_trace(mVcdFile, video_out_TREADY, "(port)video_out_TREADY");
    sc_trace(mVcdFile, video_out_TKEEP, "(port)video_out_TKEEP");
    sc_trace(mVcdFile, video_out_TSTRB, "(port)video_out_TSTRB");
    sc_trace(mVcdFile, video_out_TUSER, "(port)video_out_TUSER");
    sc_trace(mVcdFile, video_out_TLAST, "(port)video_out_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, video_in_V_data_V_0_data_out, "video_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_in, "video_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_out, "video_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_in, "video_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_out, "video_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_A, "video_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_B, "video_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_rd, "video_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_wr, "video_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel, "video_in_V_data_V_0_sel");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_A, "video_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_B, "video_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_state, "video_in_V_data_V_0_state");
    sc_trace(mVcdFile, video_in_V_data_V_0_state_cmp_full, "video_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_keep_V_0_data_out, "video_in_V_keep_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_keep_V_0_vld_in, "video_in_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_keep_V_0_vld_out, "video_in_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_keep_V_0_ack_in, "video_in_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_keep_V_0_ack_out, "video_in_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_keep_V_0_payload_A, "video_in_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_keep_V_0_payload_B, "video_in_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_keep_V_0_sel_rd, "video_in_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_keep_V_0_sel_wr, "video_in_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_keep_V_0_sel, "video_in_V_keep_V_0_sel");
    sc_trace(mVcdFile, video_in_V_keep_V_0_load_A, "video_in_V_keep_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_keep_V_0_load_B, "video_in_V_keep_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_keep_V_0_state, "video_in_V_keep_V_0_state");
    sc_trace(mVcdFile, video_in_V_keep_V_0_state_cmp_full, "video_in_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_strb_V_0_data_out, "video_in_V_strb_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_strb_V_0_vld_in, "video_in_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_strb_V_0_vld_out, "video_in_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_strb_V_0_ack_in, "video_in_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_strb_V_0_ack_out, "video_in_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_strb_V_0_payload_A, "video_in_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_strb_V_0_payload_B, "video_in_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_strb_V_0_sel_rd, "video_in_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_strb_V_0_sel_wr, "video_in_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_strb_V_0_sel, "video_in_V_strb_V_0_sel");
    sc_trace(mVcdFile, video_in_V_strb_V_0_load_A, "video_in_V_strb_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_strb_V_0_load_B, "video_in_V_strb_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_strb_V_0_state, "video_in_V_strb_V_0_state");
    sc_trace(mVcdFile, video_in_V_strb_V_0_state_cmp_full, "video_in_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_user_V_0_data_out, "video_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_in, "video_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_out, "video_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_in, "video_in_V_user_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_out, "video_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_A, "video_in_V_user_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_B, "video_in_V_user_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_rd, "video_in_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_wr, "video_in_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel, "video_in_V_user_V_0_sel");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_A, "video_in_V_user_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_B, "video_in_V_user_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_state, "video_in_V_user_V_0_state");
    sc_trace(mVcdFile, video_in_V_user_V_0_state_cmp_full, "video_in_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_last_V_0_data_out, "video_in_V_last_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_in, "video_in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_out, "video_in_V_last_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_in, "video_in_V_last_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_out, "video_in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_A, "video_in_V_last_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_B, "video_in_V_last_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_rd, "video_in_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_wr, "video_in_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel, "video_in_V_last_V_0_sel");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_A, "video_in_V_last_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_B, "video_in_V_last_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_state, "video_in_V_last_V_0_state");
    sc_trace(mVcdFile, video_in_V_last_V_0_state_cmp_full, "video_in_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_out_V_data_V_1_data_out, "video_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, video_out_V_data_V_1_vld_in, "video_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, video_out_V_data_V_1_vld_out, "video_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, video_out_V_data_V_1_ack_in, "video_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, video_out_V_data_V_1_ack_out, "video_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, video_out_V_data_V_1_payload_A, "video_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, video_out_V_data_V_1_payload_B, "video_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, video_out_V_data_V_1_sel_rd, "video_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, video_out_V_data_V_1_sel_wr, "video_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, video_out_V_data_V_1_sel, "video_out_V_data_V_1_sel");
    sc_trace(mVcdFile, video_out_V_data_V_1_load_A, "video_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, video_out_V_data_V_1_load_B, "video_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, video_out_V_data_V_1_state, "video_out_V_data_V_1_state");
    sc_trace(mVcdFile, video_out_V_data_V_1_state_cmp_full, "video_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, video_out_V_keep_V_1_data_out, "video_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, video_out_V_keep_V_1_vld_in, "video_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, video_out_V_keep_V_1_vld_out, "video_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, video_out_V_keep_V_1_ack_in, "video_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, video_out_V_keep_V_1_ack_out, "video_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, video_out_V_keep_V_1_payload_A, "video_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, video_out_V_keep_V_1_payload_B, "video_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, video_out_V_keep_V_1_sel_rd, "video_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, video_out_V_keep_V_1_sel_wr, "video_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, video_out_V_keep_V_1_sel, "video_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, video_out_V_keep_V_1_load_A, "video_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, video_out_V_keep_V_1_load_B, "video_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, video_out_V_keep_V_1_state, "video_out_V_keep_V_1_state");
    sc_trace(mVcdFile, video_out_V_keep_V_1_state_cmp_full, "video_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, video_out_V_strb_V_1_data_out, "video_out_V_strb_V_1_data_out");
    sc_trace(mVcdFile, video_out_V_strb_V_1_vld_in, "video_out_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, video_out_V_strb_V_1_vld_out, "video_out_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, video_out_V_strb_V_1_ack_in, "video_out_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, video_out_V_strb_V_1_ack_out, "video_out_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, video_out_V_strb_V_1_payload_A, "video_out_V_strb_V_1_payload_A");
    sc_trace(mVcdFile, video_out_V_strb_V_1_payload_B, "video_out_V_strb_V_1_payload_B");
    sc_trace(mVcdFile, video_out_V_strb_V_1_sel_rd, "video_out_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, video_out_V_strb_V_1_sel_wr, "video_out_V_strb_V_1_sel_wr");
    sc_trace(mVcdFile, video_out_V_strb_V_1_sel, "video_out_V_strb_V_1_sel");
    sc_trace(mVcdFile, video_out_V_strb_V_1_load_A, "video_out_V_strb_V_1_load_A");
    sc_trace(mVcdFile, video_out_V_strb_V_1_load_B, "video_out_V_strb_V_1_load_B");
    sc_trace(mVcdFile, video_out_V_strb_V_1_state, "video_out_V_strb_V_1_state");
    sc_trace(mVcdFile, video_out_V_strb_V_1_state_cmp_full, "video_out_V_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, video_out_V_user_V_1_data_out, "video_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, video_out_V_user_V_1_vld_in, "video_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, video_out_V_user_V_1_vld_out, "video_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, video_out_V_user_V_1_ack_in, "video_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, video_out_V_user_V_1_ack_out, "video_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, video_out_V_user_V_1_payload_A, "video_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, video_out_V_user_V_1_payload_B, "video_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, video_out_V_user_V_1_sel_rd, "video_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, video_out_V_user_V_1_sel_wr, "video_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, video_out_V_user_V_1_sel, "video_out_V_user_V_1_sel");
    sc_trace(mVcdFile, video_out_V_user_V_1_load_A, "video_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, video_out_V_user_V_1_load_B, "video_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, video_out_V_user_V_1_state, "video_out_V_user_V_1_state");
    sc_trace(mVcdFile, video_out_V_user_V_1_state_cmp_full, "video_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, video_out_V_last_V_1_data_out, "video_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, video_out_V_last_V_1_vld_in, "video_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, video_out_V_last_V_1_vld_out, "video_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, video_out_V_last_V_1_ack_in, "video_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, video_out_V_last_V_1_ack_out, "video_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, video_out_V_last_V_1_payload_A, "video_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, video_out_V_last_V_1_payload_B, "video_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, video_out_V_last_V_1_sel_rd, "video_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, video_out_V_last_V_1_sel_wr, "video_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, video_out_V_last_V_1_sel, "video_out_V_last_V_1_sel");
    sc_trace(mVcdFile, video_out_V_last_V_1_load_A, "video_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, video_out_V_last_V_1_load_B, "video_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, video_out_V_last_V_1_state, "video_out_V_last_V_1_state");
    sc_trace(mVcdFile, video_out_V_last_V_1_state_cmp_full, "video_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, video_in_TDATA_blk_n, "video_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_reg_237, "exitcond_reg_237");
    sc_trace(mVcdFile, video_out_TDATA_blk_n, "video_out_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_237, "ap_reg_pp0_iter1_exitcond_reg_237");
    sc_trace(mVcdFile, i_reg_117, "i_reg_117");
    sc_trace(mVcdFile, exitcond_fu_133_p2, "exitcond_fu_133_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, i_1_fu_139_p2, "i_1_fu_139_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_fu_145_p1, "tmp_fu_145_p1");
    sc_trace(mVcdFile, tmp_reg_246, "tmp_reg_246");
    sc_trace(mVcdFile, pixOut_3_fu_207_p3, "pixOut_3_fu_207_p3");
    sc_trace(mVcdFile, tmp_keep_V_1_fu_215_p1, "tmp_keep_V_1_fu_215_p1");
    sc_trace(mVcdFile, tmp_strb_V_1_fu_220_p1, "tmp_strb_V_1_fu_220_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, leftover_V_fu_80, "leftover_V_fu_80");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, leftover_V_1_fu_200_p3, "leftover_V_1_fu_200_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, Y_V_fu_174_p1, "Y_V_fu_174_p1");
    sc_trace(mVcdFile, Cr_V_fu_178_p4, "Cr_V_fu_178_p4");
    sc_trace(mVcdFile, pixOut_1_fu_192_p3, "pixOut_1_fu_192_p3");
    sc_trace(mVcdFile, pixOut_fu_188_p1, "pixOut_fu_188_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("CrappyButFreeChromaResampler.hdltvin.dat");
    mHdltvoutHandle.open("CrappyButFreeChromaResampler.hdltvout.dat");
}

CrappyButFreeChromaResampler::~CrappyButFreeChromaResampler() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void CrappyButFreeChromaResampler::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_133_p2.read()))) {
        i_reg_117 = i_1_fu_139_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_117 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        leftover_V_fu_80 = leftover_V_1_fu_200_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        leftover_V_fu_80 = ap_const_lv8_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_out.read()))) {
            video_in_V_data_V_0_sel_rd =  (sc_logic) (~video_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_in.read()))) {
            video_in_V_data_V_0_sel_wr =  (sc_logic) (~video_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            video_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()))))) {
            video_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_vld_out.read()))) {
            video_in_V_keep_V_0_sel_rd =  (sc_logic) (~video_in_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_ack_in.read()))) {
            video_in_V_keep_V_0_sel_wr =  (sc_logic) (~video_in_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_keep_V_0_state.read())))) {
            video_in_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_keep_V_0_state.read())))) {
            video_in_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_ack_out.read()))))) {
            video_in_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_out.read()))) {
            video_in_V_last_V_0_sel_rd =  (sc_logic) (~video_in_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_in.read()))) {
            video_in_V_last_V_0_sel_wr =  (sc_logic) (~video_in_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()))))) {
            video_in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_vld_out.read()))) {
            video_in_V_strb_V_0_sel_rd =  (sc_logic) (~video_in_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_ack_in.read()))) {
            video_in_V_strb_V_0_sel_wr =  (sc_logic) (~video_in_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_strb_V_0_state.read())))) {
            video_in_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_strb_V_0_state.read())))) {
            video_in_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_ack_out.read()))))) {
            video_in_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_out.read()))) {
            video_in_V_user_V_0_sel_rd =  (sc_logic) (~video_in_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_in.read()))) {
            video_in_V_user_V_0_sel_wr =  (sc_logic) (~video_in_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_in_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()))))) {
            video_in_V_user_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_vld_out.read()))) {
            video_out_V_data_V_1_sel_rd =  (sc_logic) (~video_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_ack_in.read()))) {
            video_out_V_data_V_1_sel_wr =  (sc_logic) (~video_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_data_V_1_state.read())))) {
            video_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_data_V_1_state.read())))) {
            video_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_ack_out.read()))))) {
            video_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            video_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_vld_out.read()))) {
            video_out_V_keep_V_1_sel_rd =  (sc_logic) (~video_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_ack_in.read()))) {
            video_out_V_keep_V_1_sel_wr =  (sc_logic) (~video_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_keep_V_1_state.read())))) {
            video_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_keep_V_1_state.read())))) {
            video_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_ack_out.read()))))) {
            video_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            video_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_vld_out.read()))) {
            video_out_V_last_V_1_sel_rd =  (sc_logic) (~video_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_ack_in.read()))) {
            video_out_V_last_V_1_sel_wr =  (sc_logic) (~video_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_last_V_1_state.read())))) {
            video_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_last_V_1_state.read())))) {
            video_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_ack_out.read()))))) {
            video_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            video_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_vld_out.read()))) {
            video_out_V_strb_V_1_sel_rd =  (sc_logic) (~video_out_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_ack_in.read()))) {
            video_out_V_strb_V_1_sel_wr =  (sc_logic) (~video_out_V_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_strb_V_1_state.read())))) {
            video_out_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_strb_V_1_state.read())))) {
            video_out_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_ack_out.read()))))) {
            video_out_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            video_out_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_vld_out.read()))) {
            video_out_V_user_V_1_sel_rd =  (sc_logic) (~video_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_ack_in.read()))) {
            video_out_V_user_V_1_sel_wr =  (sc_logic) (~video_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        video_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_user_V_1_state.read())))) {
            video_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_user_V_1_state.read())))) {
            video_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_ack_out.read()))))) {
            video_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            video_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_reg_237 = exitcond_reg_237.read();
        exitcond_reg_237 = exitcond_fu_133_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_133_p2.read()))) {
        tmp_reg_246 = tmp_fu_145_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_A.read())) {
        video_in_V_data_V_0_payload_A = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_B.read())) {
        video_in_V_data_V_0_payload_B = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_load_A.read())) {
        video_in_V_keep_V_0_payload_A = video_in_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_load_B.read())) {
        video_in_V_keep_V_0_payload_B = video_in_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_A.read())) {
        video_in_V_last_V_0_payload_A = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_B.read())) {
        video_in_V_last_V_0_payload_B = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_load_A.read())) {
        video_in_V_strb_V_0_payload_A = video_in_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_load_B.read())) {
        video_in_V_strb_V_0_payload_B = video_in_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_A.read())) {
        video_in_V_user_V_0_payload_A = video_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_B.read())) {
        video_in_V_user_V_0_payload_B = video_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_load_A.read())) {
        video_out_V_data_V_1_payload_A = pixOut_3_fu_207_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_load_B.read())) {
        video_out_V_data_V_1_payload_B = pixOut_3_fu_207_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_load_A.read())) {
        video_out_V_keep_V_1_payload_A = tmp_keep_V_1_fu_215_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_load_B.read())) {
        video_out_V_keep_V_1_payload_B = tmp_keep_V_1_fu_215_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_load_A.read())) {
        video_out_V_last_V_1_payload_A = video_in_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_load_B.read())) {
        video_out_V_last_V_1_payload_B = video_in_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_load_A.read())) {
        video_out_V_strb_V_1_payload_A = tmp_strb_V_1_fu_220_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_load_B.read())) {
        video_out_V_strb_V_1_payload_B = tmp_strb_V_1_fu_220_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_load_A.read())) {
        video_out_V_user_V_1_payload_A = video_in_V_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_load_B.read())) {
        video_out_V_user_V_1_payload_B = video_in_V_user_V_0_data_out.read();
    }
}

void CrappyButFreeChromaResampler::thread_Cr_V_fu_178_p4() {
    Cr_V_fu_178_p4 = video_in_V_data_V_0_data_out.read().range(23, 16);
}

void CrappyButFreeChromaResampler::thread_Y_V_fu_174_p1() {
    Y_V_fu_174_p1 = video_in_V_data_V_0_data_out.read().range(8-1, 0);
}

void CrappyButFreeChromaResampler::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void CrappyButFreeChromaResampler::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void CrappyButFreeChromaResampler::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void CrappyButFreeChromaResampler::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CrappyButFreeChromaResampler::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()));
}

void CrappyButFreeChromaResampler::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void CrappyButFreeChromaResampler::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void CrappyButFreeChromaResampler::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CrappyButFreeChromaResampler::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_ack_in.read()));
}

void CrappyButFreeChromaResampler::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()));
}

void CrappyButFreeChromaResampler::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_reg_237.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_out_V_data_V_1_ack_in.read()));
}

void CrappyButFreeChromaResampler::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CrappyButFreeChromaResampler::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_133_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void CrappyButFreeChromaResampler::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void CrappyButFreeChromaResampler::thread_exitcond_fu_133_p2() {
    exitcond_fu_133_p2 = (!i_reg_117.read().is_01() || !ap_const_lv21_1FA400.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_117.read() == ap_const_lv21_1FA400);
}

void CrappyButFreeChromaResampler::thread_i_1_fu_139_p2() {
    i_1_fu_139_p2 = (!i_reg_117.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(i_reg_117.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void CrappyButFreeChromaResampler::thread_leftover_V_1_fu_200_p3() {
    leftover_V_1_fu_200_p3 = (!tmp_reg_246.read()[0].is_01())? sc_lv<8>(): ((tmp_reg_246.read()[0].to_bool())? leftover_V_fu_80.read(): Cr_V_fu_178_p4.read());
}

void CrappyButFreeChromaResampler::thread_pixOut_1_fu_192_p3() {
    pixOut_1_fu_192_p3 = esl_concat<8,8>(leftover_V_fu_80.read(), Y_V_fu_174_p1.read());
}

void CrappyButFreeChromaResampler::thread_pixOut_3_fu_207_p3() {
    pixOut_3_fu_207_p3 = (!tmp_reg_246.read()[0].is_01())? sc_lv<16>(): ((tmp_reg_246.read()[0].to_bool())? pixOut_1_fu_192_p3.read(): pixOut_fu_188_p1.read());
}

void CrappyButFreeChromaResampler::thread_pixOut_fu_188_p1() {
    pixOut_fu_188_p1 = video_in_V_data_V_0_data_out.read().range(16-1, 0);
}

void CrappyButFreeChromaResampler::thread_tmp_fu_145_p1() {
    tmp_fu_145_p1 = i_reg_117.read().range(1-1, 0);
}

void CrappyButFreeChromaResampler::thread_tmp_keep_V_1_fu_215_p1() {
    tmp_keep_V_1_fu_215_p1 = video_in_V_keep_V_0_data_out.read().range(2-1, 0);
}

void CrappyButFreeChromaResampler::thread_tmp_strb_V_1_fu_220_p1() {
    tmp_strb_V_1_fu_220_p1 = video_in_V_strb_V_0_data_out.read().range(2-1, 0);
}

void CrappyButFreeChromaResampler::thread_video_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()))) {
        video_in_TDATA_blk_n = video_in_V_data_V_0_state.read()[0];
    } else {
        video_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_TREADY() {
    video_in_TREADY = video_in_V_last_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_ack_in() {
    video_in_V_data_V_0_ack_in = video_in_V_data_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_sel.read())) {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_B.read();
    } else {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_load_A() {
    video_in_V_data_V_0_load_A = (video_in_V_data_V_0_state_cmp_full.read() & ~video_in_V_data_V_0_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_load_B() {
    video_in_V_data_V_0_load_B = (video_in_V_data_V_0_sel_wr.read() & video_in_V_data_V_0_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_sel() {
    video_in_V_data_V_0_sel = video_in_V_data_V_0_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_state_cmp_full() {
    video_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_vld_in() {
    video_in_V_data_V_0_vld_in = video_in_TVALID.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_data_V_0_vld_out() {
    video_in_V_data_V_0_vld_out = video_in_V_data_V_0_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_ack_in() {
    video_in_V_keep_V_0_ack_in = video_in_V_keep_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_in_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_keep_V_0_sel.read())) {
        video_in_V_keep_V_0_data_out = video_in_V_keep_V_0_payload_B.read();
    } else {
        video_in_V_keep_V_0_data_out = video_in_V_keep_V_0_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_load_A() {
    video_in_V_keep_V_0_load_A = (video_in_V_keep_V_0_state_cmp_full.read() & ~video_in_V_keep_V_0_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_load_B() {
    video_in_V_keep_V_0_load_B = (video_in_V_keep_V_0_sel_wr.read() & video_in_V_keep_V_0_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_sel() {
    video_in_V_keep_V_0_sel = video_in_V_keep_V_0_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_state_cmp_full() {
    video_in_V_keep_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_vld_in() {
    video_in_V_keep_V_0_vld_in = video_in_TVALID.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_keep_V_0_vld_out() {
    video_in_V_keep_V_0_vld_out = video_in_V_keep_V_0_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_ack_in() {
    video_in_V_last_V_0_ack_in = video_in_V_last_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_sel.read())) {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_B.read();
    } else {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_load_A() {
    video_in_V_last_V_0_load_A = (video_in_V_last_V_0_state_cmp_full.read() & ~video_in_V_last_V_0_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_load_B() {
    video_in_V_last_V_0_load_B = (video_in_V_last_V_0_sel_wr.read() & video_in_V_last_V_0_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_sel() {
    video_in_V_last_V_0_sel = video_in_V_last_V_0_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_state_cmp_full() {
    video_in_V_last_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_vld_in() {
    video_in_V_last_V_0_vld_in = video_in_TVALID.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_last_V_0_vld_out() {
    video_in_V_last_V_0_vld_out = video_in_V_last_V_0_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_ack_in() {
    video_in_V_strb_V_0_ack_in = video_in_V_strb_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_in_V_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_strb_V_0_sel.read())) {
        video_in_V_strb_V_0_data_out = video_in_V_strb_V_0_payload_B.read();
    } else {
        video_in_V_strb_V_0_data_out = video_in_V_strb_V_0_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_load_A() {
    video_in_V_strb_V_0_load_A = (video_in_V_strb_V_0_state_cmp_full.read() & ~video_in_V_strb_V_0_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_load_B() {
    video_in_V_strb_V_0_load_B = (video_in_V_strb_V_0_sel_wr.read() & video_in_V_strb_V_0_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_sel() {
    video_in_V_strb_V_0_sel = video_in_V_strb_V_0_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_state_cmp_full() {
    video_in_V_strb_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_vld_in() {
    video_in_V_strb_V_0_vld_in = video_in_TVALID.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_strb_V_0_vld_out() {
    video_in_V_strb_V_0_vld_out = video_in_V_strb_V_0_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_ack_in() {
    video_in_V_user_V_0_ack_in = video_in_V_user_V_0_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_sel.read())) {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_B.read();
    } else {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_load_A() {
    video_in_V_user_V_0_load_A = (video_in_V_user_V_0_state_cmp_full.read() & ~video_in_V_user_V_0_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_load_B() {
    video_in_V_user_V_0_load_B = (video_in_V_user_V_0_sel_wr.read() & video_in_V_user_V_0_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_sel() {
    video_in_V_user_V_0_sel = video_in_V_user_V_0_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_state_cmp_full() {
    video_in_V_user_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_vld_in() {
    video_in_V_user_V_0_vld_in = video_in_TVALID.read();
}

void CrappyButFreeChromaResampler::thread_video_in_V_user_V_0_vld_out() {
    video_in_V_user_V_0_vld_out = video_in_V_user_V_0_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_TDATA() {
    video_out_TDATA = video_out_V_data_V_1_data_out.read();
}

void CrappyButFreeChromaResampler::thread_video_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_reg_237.read())))) {
        video_out_TDATA_blk_n = video_out_V_data_V_1_state.read()[1];
    } else {
        video_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_TKEEP() {
    video_out_TKEEP = video_out_V_keep_V_1_data_out.read();
}

void CrappyButFreeChromaResampler::thread_video_out_TLAST() {
    video_out_TLAST = video_out_V_last_V_1_data_out.read();
}

void CrappyButFreeChromaResampler::thread_video_out_TSTRB() {
    video_out_TSTRB = video_out_V_strb_V_1_data_out.read();
}

void CrappyButFreeChromaResampler::thread_video_out_TUSER() {
    video_out_TUSER = video_out_V_user_V_1_data_out.read();
}

void CrappyButFreeChromaResampler::thread_video_out_TVALID() {
    video_out_TVALID = video_out_V_last_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_ack_in() {
    video_out_V_data_V_1_ack_in = video_out_V_data_V_1_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_ack_out() {
    video_out_V_data_V_1_ack_out = video_out_TREADY.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_data_V_1_sel.read())) {
        video_out_V_data_V_1_data_out = video_out_V_data_V_1_payload_B.read();
    } else {
        video_out_V_data_V_1_data_out = video_out_V_data_V_1_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_load_A() {
    video_out_V_data_V_1_load_A = (video_out_V_data_V_1_state_cmp_full.read() & ~video_out_V_data_V_1_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_load_B() {
    video_out_V_data_V_1_load_B = (video_out_V_data_V_1_sel_wr.read() & video_out_V_data_V_1_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_sel() {
    video_out_V_data_V_1_sel = video_out_V_data_V_1_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_state_cmp_full() {
    video_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!video_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        video_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_data_V_1_vld_out() {
    video_out_V_data_V_1_vld_out = video_out_V_data_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_ack_in() {
    video_out_V_keep_V_1_ack_in = video_out_V_keep_V_1_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_ack_out() {
    video_out_V_keep_V_1_ack_out = video_out_TREADY.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_keep_V_1_sel.read())) {
        video_out_V_keep_V_1_data_out = video_out_V_keep_V_1_payload_B.read();
    } else {
        video_out_V_keep_V_1_data_out = video_out_V_keep_V_1_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_load_A() {
    video_out_V_keep_V_1_load_A = (video_out_V_keep_V_1_state_cmp_full.read() & ~video_out_V_keep_V_1_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_load_B() {
    video_out_V_keep_V_1_load_B = (video_out_V_keep_V_1_sel_wr.read() & video_out_V_keep_V_1_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_sel() {
    video_out_V_keep_V_1_sel = video_out_V_keep_V_1_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_state_cmp_full() {
    video_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!video_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        video_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_keep_V_1_vld_out() {
    video_out_V_keep_V_1_vld_out = video_out_V_keep_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_ack_in() {
    video_out_V_last_V_1_ack_in = video_out_V_last_V_1_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_ack_out() {
    video_out_V_last_V_1_ack_out = video_out_TREADY.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_last_V_1_sel.read())) {
        video_out_V_last_V_1_data_out = video_out_V_last_V_1_payload_B.read();
    } else {
        video_out_V_last_V_1_data_out = video_out_V_last_V_1_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_load_A() {
    video_out_V_last_V_1_load_A = (video_out_V_last_V_1_state_cmp_full.read() & ~video_out_V_last_V_1_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_load_B() {
    video_out_V_last_V_1_load_B = (video_out_V_last_V_1_sel_wr.read() & video_out_V_last_V_1_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_sel() {
    video_out_V_last_V_1_sel = video_out_V_last_V_1_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_state_cmp_full() {
    video_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!video_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        video_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_last_V_1_vld_out() {
    video_out_V_last_V_1_vld_out = video_out_V_last_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_ack_in() {
    video_out_V_strb_V_1_ack_in = video_out_V_strb_V_1_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_ack_out() {
    video_out_V_strb_V_1_ack_out = video_out_TREADY.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_strb_V_1_sel.read())) {
        video_out_V_strb_V_1_data_out = video_out_V_strb_V_1_payload_B.read();
    } else {
        video_out_V_strb_V_1_data_out = video_out_V_strb_V_1_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_load_A() {
    video_out_V_strb_V_1_load_A = (video_out_V_strb_V_1_state_cmp_full.read() & ~video_out_V_strb_V_1_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_load_B() {
    video_out_V_strb_V_1_load_B = (video_out_V_strb_V_1_sel_wr.read() & video_out_V_strb_V_1_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_sel() {
    video_out_V_strb_V_1_sel = video_out_V_strb_V_1_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_state_cmp_full() {
    video_out_V_strb_V_1_state_cmp_full =  (sc_logic) ((!video_out_V_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_out_V_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_out_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        video_out_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_strb_V_1_vld_out() {
    video_out_V_strb_V_1_vld_out = video_out_V_strb_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_ack_in() {
    video_out_V_user_V_1_ack_in = video_out_V_user_V_1_state.read()[1];
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_ack_out() {
    video_out_V_user_V_1_ack_out = video_out_TREADY.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_out_V_user_V_1_sel.read())) {
        video_out_V_user_V_1_data_out = video_out_V_user_V_1_payload_B.read();
    } else {
        video_out_V_user_V_1_data_out = video_out_V_user_V_1_payload_A.read();
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_load_A() {
    video_out_V_user_V_1_load_A = (video_out_V_user_V_1_state_cmp_full.read() & ~video_out_V_user_V_1_sel_wr.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_load_B() {
    video_out_V_user_V_1_load_B = (video_out_V_user_V_1_sel_wr.read() & video_out_V_user_V_1_state_cmp_full.read());
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_sel() {
    video_out_V_user_V_1_sel = video_out_V_user_V_1_sel_rd.read();
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_state_cmp_full() {
    video_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!video_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_237.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        video_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        video_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void CrappyButFreeChromaResampler::thread_video_out_V_user_V_1_vld_out() {
    video_out_V_user_V_1_vld_out = video_out_V_user_V_1_state.read()[0];
}

void CrappyButFreeChromaResampler::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_133_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_133_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void CrappyButFreeChromaResampler::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TDATA\" :  \"" << video_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TVALID\" :  \"" << video_in_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"video_in_TREADY\" :  \"" << video_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TKEEP\" :  \"" << video_in_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TSTRB\" :  \"" << video_in_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TUSER\" :  \"" << video_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TLAST\" :  \"" << video_in_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TDATA\" :  \"" << video_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TVALID\" :  \"" << video_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_out_TREADY\" :  \"" << video_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TKEEP\" :  \"" << video_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TSTRB\" :  \"" << video_out_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TUSER\" :  \"" << video_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TLAST\" :  \"" << video_out_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

